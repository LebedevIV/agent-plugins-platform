/**
 * ui/test-harness.js
 * –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—à–µ–≥–æ UI (index.html).
 */

import { getAvailablePlugins } from '../core/plugin-manager.js';
import { createPluginCard } from './PluginCard.js';
import { hostApi } from '../core/host-api.js';
import { runWorkflow } from '../core/workflow-engine.js';
import { showSuccessToast, showErrorToast, showInfoToast, showWarningToast } from './toast-notifications.js';

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ Host-API ---
window.hostApi = hostApi;

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º sendMessageToChat –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å sidebar
window.hostApi.sendMessageToChat = (message) => {
    // –õ–æ–≥–∏ —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ sidebar —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –≤–∫–ª–∞–¥–∫–∏
    console.log("[Python Message] –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è sidebar:", message.content);
};

console.log('–¢–µ—Å—Ç–æ–≤—ã–π —Å—Ç–µ–Ω–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (v0.6.0).');

// --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞–≥–∏–Ω–µ
function showPluginInfo(plugin) {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞
    const isEnabled = getPluginState(plugin.id);
    
    // --- –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É ---
    const rightSidebar = document.querySelector('.ide-sidebar-right');
    if (rightSidebar) {
        rightSidebar.innerHTML = `
          <div class="plugin-info">
            <h2>${plugin.name}</h2>
            <div class="plugin-meta">
              <span class="version">–í–µ—Ä—Å–∏—è: ${plugin.version}</span>
              <span class="id">ID: ${plugin.id}</span>
            </div>
            <div class="plugin-description">
              <h3>–û–ø–∏—Å–∞–Ω–∏–µ</h3>
              <p>${plugin.description}</p>
            </div>
            <div class="plugin-actions">
              <h3>–î–µ–π—Å—Ç–≤–∏—è</h3>
              <div class="plugin-toggle">
                <label class="toggle-switch">
                  <input type="checkbox" id="toggle-${plugin.id}" onchange="togglePlugin('${plugin.id}', this.checked)" ${isEnabled ? 'checked' : ''}>
                  <span class="toggle-slider"></span>
                </label>
                <span class="toggle-label">–í–∫–ª—é—á–∏—Ç—å –ø–ª–∞–≥–∏–Ω</span>
              </div>
              <button class="view-manifest-btn" onclick="viewManifest('${plugin.id}')">
                üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞–Ω–∏—Ñ–µ—Å—Ç
              </button>
              <button class="view-workflow-btn" onclick="viewWorkflow('${plugin.id}')">
                üîÑ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å workflow
              </button>
            </div>
            <div class="plugin-files">
              <h3>–§–∞–π–ª—ã –ø–ª–∞–≥–∏–Ω–∞</h3>
              <ul>
                <li>üìÑ manifest.json</li>
                <li>üêç mcp_server.py</li>
                <li>‚öôÔ∏è workflow.json</li>
                <li>üé® icon.svg</li>
              </ul>
            </div>
          </div>
        `;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞
window.togglePlugin = async function(pluginId, enabled) {
    try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞ –≤ localStorage
        const pluginStates = JSON.parse(localStorage.getItem('pluginStates') || '{}');
        pluginStates[pluginId] = enabled;
        localStorage.setItem('pluginStates', JSON.stringify(pluginStates));
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        const card = document.querySelector(`.plugin-card[data-plugin-id="${pluginId}"]`);
        if (card) {
            if (enabled) {
                card.classList.remove('disabled');
                showSuccessToast(`–ü–ª–∞–≥–∏–Ω –≤–∫–ª—é—á–µ–Ω`);
            } else {
                card.classList.add('disabled');
                showInfoToast(`–ü–ª–∞–≥–∏–Ω –æ—Ç–∫–ª—é—á–µ–Ω`);
            }
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏
        const toggle = document.getElementById(`toggle-${pluginId}`);
        if (toggle) {
            toggle.checked = enabled;
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞:', error);
        showErrorToast(`–û—à–∏–±–∫–∞: ${error.message}`);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞
function getPluginState(pluginId) {
    try {
        const pluginStates = JSON.parse(localStorage.getItem('pluginStates') || '{}');
        return pluginStates[pluginId] || false;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞:', error);
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞ –ø–æ ID
async function getPluginById(pluginId) {
    try {
        const plugins = await getAvailablePlugins();
        return plugins.find(p => p.id === pluginId);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞:', error);
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∞–π–ª–æ–≤ –ø–ª–∞–≥–∏–Ω–∞
window.viewManifest = function(pluginId) {
    showInfoToast(`–ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –ø–ª–∞–≥–∏–Ω–∞ ${pluginId}`);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ manifest.json
}

window.viewWorkflow = function(pluginId) {
    showInfoToast(`–ü—Ä–æ—Å–º–æ—Ç—Ä workflow –ø–ª–∞–≥–∏–Ω–∞ ${pluginId}`);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ workflow.json
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–æ–≤
async function displayPlugins() {
    const pluginsListContainer = document.getElementById('plugins-list');
    if (!pluginsListContainer) return;
    
    try {
        const plugins = await getAvailablePlugins();
        pluginsListContainer.innerHTML = '';
        plugins.forEach(plugin => {
            const pluginCard = createPluginCard(plugin);
            // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ —ç—Ç—É –∫–∞—Ä—Ç–æ—á–∫—É
            pluginCard.dataset.pluginId = plugin.id;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞
            const isEnabled = getPluginState(plugin.id);
            if (!isEnabled) {
                pluginCard.classList.add('disabled');
            }
            
            // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞–≥–∏–Ω–µ
            pluginCard.onclick = () => showPluginInfo(plugin);
            pluginsListContainer.appendChild(pluginCard);
        });
    } catch (error) {
        pluginsListContainer.textContent = `–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–∞–≥–∏–Ω–æ–≤: ${error.message}`;
        console.error("–û—à–∏–±–∫–∞ –≤ displayPlugins:", error);
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∫–ª–∞–¥–æ–∫
function setupTabs() {
  const tabContainer = document.querySelector('.tab-nav');
  if (!tabContainer) return;
  tabContainer.addEventListener('click', (event) => {
    const clickedButton = event.target.closest('.tab-button');
    if (!clickedButton) return;
    const tabId = clickedButton.dataset.tab;
    if (!tabId) return;
    tabContainer.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('.tab-content').forEach(content => content.classList.add('hidden'));
    clickedButton.classList.add('active');
    document.getElementById(tabId)?.classList.remove('hidden');
  });
}

// --- –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
displayPlugins();
setupTabs();